[build-system]
requires = ["setuptools>=45"]
build-backend = "setuptools.build_meta"

[project]
name = "tree_sitter_type_provider"
version = "2.2.0"
description = "Type providers for tree-sitter in Python."
license = { file = 'LICENSE' }
authors = [{ name = "Wen Kokke", email = "wenkokke@users.noreply.github.com" }]
readme = "README.md"
keywords = ["parser", "tree-sitter", "type-provider"]
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Topic :: Software Development :: Compilers",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.8,<3.13"
dependencies = ["tree_sitter ==0.21.3", "dataclasses_json >=0.6.7,<0.7"]

[project.optional-dependencies]
mypy = ["types_setuptools"]
test = [
  "bumpver",
  "mypy >=1.1.1,<2",
  "pytest >=7.1.2,<9",
  "pytest_golden >=0.2.2,<0.3",
  "setuptools>=45",
]

[tool.bumpver]
current_version = "2.2.0"
version_pattern = "MAJOR.MINOR.PATCH"
commit_message = "Bump version {old_version} -> {new_version}"
commit = true
tag = true
push = true

[tool.bumpver.file_patterns]
"pyproject.toml" = [
  'current_version = "{version}"',
  'version = "{pep440_version}"'
]

[tool.mypy]
python_version = "3.8"
strict = true
implicit_reexport = false
ignore_missing_imports = true

[tool.pytest.ini_options]
enable_assertion_pass_hook = true
filterwarnings = ["ignore::DeprecationWarning:.*:"]
testpaths = "tests"

[tool.setuptools.packages.find]
where = ["src"]

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py38, py39, py310, py311, py312
isolated_build = true

[testenv]
pass_env =
  PYTEST_ARGS
extras =
  test
commands =
  {envpython} -m bumpver update --patch --dry --no-fetch
  {envpython} -m pytest tests {env:PYTEST_ARGS}
"""
